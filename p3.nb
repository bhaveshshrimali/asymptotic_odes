(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     68516,       1853]
NotebookOptionsPosition[     67336,       1808]
NotebookOutlinePosition[     67684,       1823]
CellTagsIndexPosition[     67641,       1820]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "T_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"A", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Delta]", "*", "T"}], "]"}]}], "+", 
   RowBox[{"B", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Delta]", "*", "T"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "T_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"\[Alpha]", "*", 
    RowBox[{"Cos", "[", "T", "]"}]}], "+", 
   RowBox[{"\[Beta]", "*", 
    RowBox[{"Sin", "[", "T", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"TrigReduce", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "*", 
       RowBox[{"f", "[", "T", "]"}], "*", 
       RowBox[{"g", "[", "T", "]"}]}], "+", 
      RowBox[{"2", "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f", "[", "T", "]"}], ",", "T"}], "]"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"g", "[", "T", "]"}], ",", "T"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"T", "+", 
        RowBox[{"\[Delta]", "*", "T"}]}], "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", "+", 
        RowBox[{"\[Delta]", "*", "T"}]}], "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Delta]", "*", "T"}], "-", "T"}], "]"}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Delta]", "*", "T"}], "-", "T"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.720220200569074*^9, 3.720220335158473*^9}, {
  3.720220465432293*^9, 3.720220581234784*^9}, {3.7202206694275885`*^9, 
  3.720220673819594*^9}, {3.7202207057754583`*^9, 3.720220718733227*^9}, {
  3.720220769341298*^9, 3.7202208273490086`*^9}, {3.7202298944904213`*^9, 
  3.720229894677448*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "A"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"B", " ", "\[Beta]"}], "+", 
             RowBox[{"2", " ", "A", " ", "\[Alpha]", " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", "B", " ", "\[Beta]", " ", "\[Delta]"}]}], 
            ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"T", "-", 
             RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "A"}], " ", "\[Alpha]"}], "+", 
             RowBox[{"B", " ", "\[Beta]"}], "-", 
             RowBox[{"2", " ", "A", " ", "\[Alpha]", " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", "B", " ", "\[Beta]", " ", "\[Delta]"}]}], 
            ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"T", "+", 
             RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", "A", " ", "\[Beta]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"T", "-", 
             RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"B", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"T", "-", 
                RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}], "-", 
             RowBox[{"2", " ", "B", " ", "\[Alpha]", " ", "\[Delta]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"T", "-", 
                RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}], "+", 
             RowBox[{"2", " ", "A", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"T", "-", 
                RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "B"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"A", " ", "\[Beta]"}], "-", 
             RowBox[{"2", " ", "B", " ", "\[Alpha]", " ", "\[Delta]"}], "-", 
             RowBox[{"2", " ", "A", " ", "\[Beta]", " ", "\[Delta]"}]}], 
            ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"T", "+", 
             RowBox[{"T", " ", "\[Delta]"}]}], "]"}]}]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 28051282042075349461, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 28051282042075349461, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 28051282042075349461, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[45]]], "Output",
 CellChangeTimes->{{3.7202205665570393`*^9, 3.7202205834108963`*^9}, 
   3.7202206744825387`*^9, 3.720220720449527*^9, 3.720220829166214*^9, 
   3.7202298955935493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"y", "/.", 
   RowBox[{"\[Delta]", "\[Rule]", " ", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.720229898160839*^9, 3.7202299172801385`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "A", " ", "\[Alpha]"}], "+", 
             RowBox[{"3", " ", "B", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "T", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "A", " ", "\[Alpha]"}], "+", 
             RowBox[{"5", " ", "B", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"3", " ", "T"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", "A", " ", "\[Beta]", " ", 
           RowBox[{"Sin", "[", "T", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "B", " ", "\[Alpha]", " ", 
              RowBox[{"Sin", "[", "T", "]"}]}], "-", 
             RowBox[{"4", " ", "A", " ", "\[Beta]", " ", 
              RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "B", " ", "\[Alpha]"}], "-", 
             RowBox[{"5", " ", "A", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "T"}], "]"}]}]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 49, 28051282042075349461, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 49, 28051282042075349461, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 49, 28051282042075349461, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[49]]], "Output",
 CellChangeTimes->{{3.7202298984828677`*^9, 3.7202299175371785`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"z", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "T", "]"}], ",", 
     RowBox[{"Sin", "[", "T", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7202299195213966`*^9, 3.7202299461913443`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "A", " ", "\[Alpha]"}], "+", 
             RowBox[{"3", " ", "B", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "T", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "A", " ", "\[Alpha]"}], "+", 
             RowBox[{"5", " ", "B", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"3", " ", "T"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"3", " ", "B", " ", "\[Alpha]"}], "2"], "-", 
             FractionBox[
              RowBox[{"3", " ", "A", " ", "\[Beta]"}], "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", "T", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "B", " ", "\[Alpha]"}], "-", 
             RowBox[{"5", " ", "A", " ", "\[Beta]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "T"}], "]"}]}]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 50, 28051282042075349461, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 50, 28051282042075349461, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 50, 28051282042075349461, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[50]]], "Output",
 CellChangeTimes->{3.7202299464993734`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"A", "'"}], "[", "T", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox["3", "8"], "*", 
       RowBox[{"\[Alpha]", "[", "T", "]"}], "*", 
       RowBox[{"\[Beta]", "[", "T", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "T", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", "T", "]"}], "^", "2"}], "-", 
        RowBox[{
         RowBox[{"\[Beta]", "[", "T", "]"}], "^", "2"}]}], "16"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "'"}], "[", "T", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{"B", "[", "T", "]"}], "*", 
         RowBox[{"\[Alpha]", "[", "T", "]"}]}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"A", "[", "T", "]"}], "*", 
         RowBox[{"\[Beta]", "[", "T", "]"}]}]}], "8"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "'"}], "[", "T", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"A", "[", "T", "]"}], "*", 
            RowBox[{"\[Alpha]", "[", "T", "]"}]}], "+", 
           RowBox[{
            RowBox[{"B", "[", "T", "]"}], "*", 
            RowBox[{"\[Beta]", "[", "T", "]"}]}]}], ")"}], " "}], "8"], 
       "."}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", "T", "]"}], ",", 
     RowBox[{"B", "[", "T", "]"}], ",", 
     RowBox[{"\[Alpha]", "[", "T", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "T", "]"}]}], "}"}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.7202301433791122`*^9, 3.7202304093547897`*^9}, {
  3.7202304634051642`*^9, 3.7202304958492146`*^9}, {3.7202305288069277`*^9, 
  3.7202305365457945`*^9}, {3.720236040396208*^9, 3.720236050828275*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"DSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SuperscriptBox["A", "\[Prime]",
                MultilineFunction->None], "[", "T", "]"}], "\[Equal]", 
              RowBox[{
               FractionBox["3", "8"], " ", 
               RowBox[{"\[Alpha]", "[", "T", "]"}], " ", 
               RowBox[{"\[Beta]", "[", "T", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               SuperscriptBox["B", "\[Prime]",
                MultilineFunction->None], "[", "T", "]"}], "\[Equal]", 
              RowBox[{
               FractionBox["1", "16"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", "T", "]"}], "2"], "-", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "[", "T", "]"}], "2"]}], ")"}]}]}], ",", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[Alpha]", "\[Prime]",
                MultilineFunction->None], "[", "T", "]"}], "\[Equal]", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  RowBox[{"B", "[", "T", "]"}], " ", 
                  RowBox[{"\[Alpha]", "[", "T", "]"}]}], "-", 
                 RowBox[{"3", " ", 
                  RowBox[{"A", "[", "T", "]"}], " ", 
                  RowBox[{"\[Beta]", "[", "T", "]"}]}]}], ")"}]}]}], ",", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "T", "]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["3", "8"]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"A", "[", "T", "]"}], " ", 
                  RowBox[{"\[Alpha]", "[", "T", "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"B", "[", "T", "]"}], " ", 
                  RowBox[{"\[Beta]", "[", "T", "]"}]}]}], ")"}]}]}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A", "[", "T", "]"}], ",", 
             RowBox[{"B", "[", "T", "]"}], ",", 
             RowBox[{"\[Alpha]", "[", "T", "]"}], ",", 
             RowBox[{"\[Beta]", "[", "T", "]"}]}], "}"}], ",", "T"}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 28051847105297014228, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 28051847105297014228, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 28051847105297014228, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[4]]], "Output",
 CellChangeTimes->{{3.7202304971473274`*^9, 3.7202305657964215`*^9}, 
   3.7202306048050013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", "*", "\[ImaginaryI]", "*", 
        RowBox[{
         RowBox[{"A", "'"}], "[", "T", "]"}]}], "+", 
       RowBox[{
        RowBox[{"B", "[", "T", "]"}], "^", "2"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "\[ImaginaryI]", "*", 
        RowBox[{
         RowBox[{"B", "'"}], "[", "T", "]"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"A", "[", "T", "]"}], "*", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"B", "[", "T", "]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", "T", "]"}], ",", 
     RowBox[{"B", "[", "T", "]"}]}], "}"}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.7202203664711485`*^9, 3.720220367243762*^9}, {
  3.720235292603798*^9, 3.7202353280019503`*^9}, {3.720235360850938*^9, 
  3.7202353906030025`*^9}, {3.7202355565442066`*^9, 3.720235634353299*^9}, {
  3.7202356671516275`*^9, 3.7202357110080643`*^9}, {3.7202360584611244`*^9, 
  3.720236066929219*^9}, {3.720236153832155*^9, 3.7202361584667444`*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "DSolve","bvimp",
   "\"General solution contains implicit solutions. In the boundary value \
problem, these solutions will be ignored, so some of the solutions will be \
lost.\"",2,1,1,28051884113412559972,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7202360749270678`*^9, 3.7202361779295564`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.720235645886613*^9, 3.720236074936069*^9, 
  3.7202361779515624`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "''"}], "[", "T", "]"}], "*", 
      RowBox[{"Conjugate", "[", 
       RowBox[{"B", "[", "T", "]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "T", "]"}], "*", 
      RowBox[{"Conjugate", "[", 
       RowBox[{
        RowBox[{"B", "'"}], "[", "T", "]"}], "]"}]}]}], "==", 
    RowBox[{
     FractionBox["3", "8"], 
     RowBox[{
      RowBox[{"B", "[", "T", "]"}], "^", "2"}], "*", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"B", "[", "T", "]"}], "]"}], "^", "2"}]}]}], ",", "B", ",", 
   "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.720235781446181*^9, 3.7202358371543713`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7202360116681504`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", "\[ImaginaryI]", "*", 
         RowBox[{
          RowBox[{"Y", "'"}], "[", "\[Tau]", "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Theta]", "[", "\[Tau]", "]"}], "^", "2"}], "2"]}], 
       "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", "\[ImaginaryI]", "*", 
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "\[Tau]", "]"}]}], "+", 
        RowBox[{"3", "*", 
         RowBox[{"Y", "[", "\[Tau]", "]"}], "*", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"\[Theta]", "[", "\[Tau]", "]"}], "]"}]}]}], "\[Equal]", 
       "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Y", ",", "\[Theta]"}], "}"}], ",", "\[Tau]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.720278907288001*^9, 3.720279062643566*^9}, {
  3.7202791349699697`*^9, 3.720279136463211*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", "\[Tau]", "}"}], ",", 
              RowBox[{
               RowBox[{"InverseFunction", "[", 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "1", "#1"], 
                  RowBox[{
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"K", "[", "1", "]"}], "2"], 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"K", "[", "1", "]"}], "]"}]], 
                   RowBox[{"\[DifferentialD]", 
                    RowBox[{"K", "[", "1", "]"}]}]}]}], "&"}], "]"}], "[", 
               RowBox[{
                RowBox[{"C", "[", "1", "]"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox[
                  RowBox[{"Y", "[", "\[Tau]", "]"}], "2"]}]}], "]"}]}], 
             "]"}]}], ",", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Integrate", "[", 
               RowBox[{
                FractionBox["1", 
                 SuperscriptBox[
                  RowBox[{
                   RowBox[{"InverseFunction", "[", 
                    RowBox[{
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "1", "#1"], 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"K", "[", "1", "]"}], "2"], 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"K", "[", "1", "]"}], "]"}]], 
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"K", "[", "1", "]"}]}]}]}], "&"}], "]"}], "[", 
                   RowBox[{
                    RowBox[{"C", "[", "1", "]"}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"K", "[", "2", "]"}], "2"]}]}], "]"}], "2"]], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"K", "[", "2", "]"}], ",", "1", ",", 
                  RowBox[{"Y", "[", "\[Tau]", "]"}]}], "}"}], ",", 
                RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}], 
              "\[Equal]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"\[ImaginaryI]", " ", "\[Tau]"}], "4"]}], "+", 
               RowBox[{"C", "[", "2", "]"}]}]}], ",", 
             RowBox[{"Y", "[", "\[Tau]", "]"}]}], "]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 28052165296423361862, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 28052165296423361862, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 28052165296423361862, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2]]], "Output",
 CellChangeTimes->{3.7202790856568747`*^9, 3.7202791446832466`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["3", "4"], "*", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["B1", "2"], "-", 
         SuperscriptBox["B2", "2"]}], ")"}]}], "\[Equal]", 
      RowBox[{"8", "*", "\[Omega]", "*", "A1"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       FractionBox["3", "4"], "*", "B1", "*", "B2"}], "\[Equal]", 
      RowBox[{"8", "*", "\[Omega]", "*", "A2"}]}], "  ", "&&", " ", 
     RowBox[{
      RowBox[{"2", "*", "\[Omega]", "*", "B1"}], "\[Equal]", 
      RowBox[{
       FractionBox["3", "2"], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A1", "*", "B2"}], "+", 
         RowBox[{"A2", "*", "B1"}]}], ")"}]}]}], "&&", " ", 
     RowBox[{
      RowBox[{"2", "*", "\[Omega]", "*", "B2"}], "\[Equal]", 
      RowBox[{
       FractionBox["3", "2"], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A2", "*", "B1"}], "-", 
         RowBox[{"A1", "*", "B2"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"A1", ",", "B1", ",", "A2", ",", "B2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7202829591047573`*^9, 3.7202831662008896`*^9}, {
   3.7202831987430105`*^9, 3.720283217233655*^9}, 3.7202832579267273`*^9, 
   3.7202832973986073`*^9, {3.7202842234550085`*^9, 3.720284374612275*^9}, {
   3.7202853686140532`*^9, 3.72028537431304*^9}, {3.7202854268142166`*^9, 
   3.72028543050989*^9}, 3.720285516354017*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A1", "\[Rule]", "0"}], ",", 
             RowBox[{"B1", "\[Rule]", "0"}], ",", 
             RowBox[{"A2", "\[Rule]", "0"}], ",", 
             RowBox[{"B2", "\[Rule]", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A1", "\[Rule]", "0"}], ",", 
             RowBox[{"B1", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"8", " ", 
                 SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}], ",", 
             RowBox[{"A2", "\[Rule]", 
              FractionBox[
               RowBox[{"4", " ", "\[Omega]"}], "3"]}], ",", 
             RowBox[{"B2", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"8", " ", 
                 SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A1", "\[Rule]", 
              RowBox[{"-", "\[Omega]"}]}], ",", 
             RowBox[{"B1", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"4", " ", 
                 SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}], ",", 
             RowBox[{"A2", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "\[Omega]"}], "3"]}]}], ",", 
             RowBox[{"B2", "\[Rule]", 
              FractionBox[
               RowBox[{"8", " ", 
                SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A1", "\[Rule]", 
              RowBox[{"-", "\[Omega]"}]}], ",", 
             RowBox[{"B1", "\[Rule]", 
              FractionBox[
               RowBox[{"4", " ", 
                SqrtBox["2"], " ", "\[Omega]"}], "3"]}], ",", 
             RowBox[{"A2", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "\[Omega]"}], "3"]}]}], ",", 
             RowBox[{"B2", "\[Rule]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"8", " ", 
                 SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A1", "\[Rule]", "0"}], ",", 
             RowBox[{"B1", "\[Rule]", 
              FractionBox[
               RowBox[{"8", " ", 
                SqrtBox["2"], " ", "\[Omega]"}], "3"]}], ",", 
             RowBox[{"A2", "\[Rule]", 
              FractionBox[
               RowBox[{"4", " ", "\[Omega]"}], "3"]}], ",", 
             RowBox[{"B2", "\[Rule]", 
              FractionBox[
               RowBox[{"8", " ", 
                SqrtBox["2"], " ", "\[Omega]"}], "3"]}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 28052207495785733213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 28052207495785733213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 28052207495785733213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[1]]], "Output",
 CellChangeTimes->{
  3.720284384093643*^9, 3.7202853752541633`*^9, {3.7202854173381844`*^9, 
   3.7202854320252647`*^9}, 3.7202855186724453`*^9}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 23, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1856, 52, 88, "Input"],
Cell[2439, 76, 9894, 253, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12370, 334, 183, 4, 30, "Input"],
Cell[12556, 340, 8761, 228, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21354, 573, 268, 7, 30, "Input"],
Cell[21625, 582, 8570, 225, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30232, 812, 1980, 56, 80, "Input"],
Cell[32215, 870, 9785, 252, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42037, 1127, 1342, 34, 30, "Input"],
Cell[43382, 1163, 356, 7, 21, "Message"],
Cell[43741, 1172, 136, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43914, 1180, 758, 24, 49, "Input"],
Cell[44675, 1206, 79, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44791, 1212, 1031, 29, 50, "Input"],
Cell[45825, 1243, 9933, 254, 150, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55795, 1502, 1497, 39, 49, "Input"],
Cell[57295, 1543, 10025, 262, 193, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

